
services:
  backend-service:
    build:
      context: ./backend/syncv
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend/syncv:/app
      - maven-repo:/root/.m2
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
    extra_hosts:  
      - "host.docker.internal:host-gateway"
    ports:
      - 5001:8080
    
  backend-fast-api-server:
    build:
      context: ./backend/pipeline
      dockerfile: Dockerfile
    depends_on:
      redis:
        condition: service_started
      database:
        condition: service_healthy
    volumes:
      - ./backend/pipeline:/code
    ports:
      - 5002:8000

  backend-ml-service:
    build:
      context: ./backend/ml_service
      dockerfile: Dockerfile
    extra_hosts:  
      - "host.docker.internal:host-gateway"

    ports:
      - 5005:7999
        

  database:
    image: postgres
    restart: always
    volumes:
      - ./backend/data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres   
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - 5003:5432
        
  redis:
    image: redis:7.2-alpine
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    ports:
      - 5004:6379
    volumes:
      - redis-data:/data

volumes:
  maven-repo:
  redis-data:
